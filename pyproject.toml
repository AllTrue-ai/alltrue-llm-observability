[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "alltrue-guardrails"
readme = "README.md"
dynamic = ["version"]
authors = [
    {name = "AllTrue.ai INC", email = "ury@alltrue.ai"}
]
description = "Alltrue Guardrails SDK"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">= 3.11"
license = {text = "Apache-2.0"}

[project.urls]
Repository = "https://github.com/AllTrue-ai/alltrue-llm-observability"

[project.optional-dependencies]
observers = [
    "wrapt~=1.17.2",
]
openai-observers = [
    "alltrue-guardrails[observers]",
    "openai~=1.63.0",
]
testing = [
    "fastapi~=0.111.1",
    "mitmproxy~=11.0.2",
    "pytest-dependency~=0.6.0",
]
dev = [
    "build",
    "pre-commit",
]
full = [
    "alltrue-guardrails-core[testing] @ file:///${PROJECT_ROOT}/core",
    "alltrue-guardrails[openai-observers]",
    "alltrue-guardrails[testing]",
    "alltrue-guardrails[dev]",
]

[tool.pdm.version]
source = "file"
path = "src/version.py"

[tool.pdm.build]
includes = ["src/alltrue_guardrails", "src/py.typed"]
custom-hook = "src/build.py"
excludes = ["**/tests/*"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-o log_cli=true",
    "-o log_cli=info",
    "-o consider_namespace_packages=true",
    "--import-mode=importlib",
]
asyncio_mode = "auto"
markers = [
    "skip_on_aws: marks tests to be skipped on AWS",
]
pythonpath = [
    "src",
    "core/src",
]

[tool.mypy]
mypy_path = "src:core/src"
namespace_packages = true
explicit_package_bases = true
exclude = "core/tests/__init__.py"

[[tool.mypy.overrides]]
module = ["tests.*"]
ignore_missing_imports = true
follow_imports_for_stubs = true

[tool.semantic_release]
version_variables = ["src/version.py:__version__"]

[tool.semantic_release.branches.main]
match = "main"
prerelease = false

[tool.semantic_release.branches.develop]
match = "develop"
prerelease = true
prerelease_token = "alpha"
